{"ast":null,"code":"import axios from \"axios\";\nconst baseUrl = \"http://0.0.0.0:5050\";\nexport const doLogin = () => {\n  return async (dispatch, getState) => {\n    await dispatch({\n      type: \"LOADING\"\n    }); // console.log(\"cek storage\", localStorage)\n\n    const username = getState().user.username;\n    const password = getState().user.password;\n    localStorage.clear();\n    localStorage.setItem(\"username\", username); // console.log(\"cek storage2\", localStorage)\n\n    await axios.get(baseUrl + \"/auth\", {\n      params: {\n        username: username,\n        password: password\n      }\n    }).then(async response => {\n      console.log(\"masuk api\", response.data.token);\n      await dispatch({\n        type: \"SUCCESS_LOGIN\",\n        payload: response.data\n      });\n      localStorage.setItem(\"token\", response.data.token); // console.log(\"cek storage2\", localStorage)\n    }).catch(function (error) {});\n    const token = localStorage.getItem(\"token\");\n    const response = await axios.get(baseUrl + \"/user\", {\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    });\n    dispatch({\n      type: \"GET_USER\",\n      payload: response.data\n    });\n  };\n};\nexport const registerClient = () => {\n  return async (dispatch, getState) => {\n    alert(\"sdh msuk tws regis1\");\n    const username = getState().register.userName;\n    const password = getState().register.password;\n    const confirmPassword = getState().register.confirmPassword;\n    const name = getState().register.name;\n    const email = getState().register.email;\n    const noTlp = getState().register.noTlp;\n    const alamat = getState().register.alamat;\n    const bodyRequestClient = {\n      username: username,\n      password: password,\n      status: \"user\"\n    };\n    const bodyRequestUser = {\n      name: name,\n      email: email,\n      no_hp: noTlp,\n      alamat: alamat\n    };\n    localStorage.clear();\n    localStorage.setItem(\"username\", username);\n    localStorage.setItem(\"password\", password);\n    await axios.post(baseUrl, bodyRequestClient, {\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\"\n      }\n    });\n    alert(\"Create account success\");\n  };\n};\nexport const changeInputUser = el => {\n  return {\n    type: \"CHANGE_INPUT_USER\",\n    payload: el\n  };\n};\nexport const doLogout = () => {\n  localStorage.clear();\n  console.log(\"cek storage2\", localStorage);\n  return {\n    type: \"LOG_OUT\"\n  };\n};","map":{"version":3,"sources":["/home/alta18/Documents/TUGAS_TOPED/FRONT_END/src/store/action/signInAction.js"],"names":["axios","baseUrl","doLogin","dispatch","getState","type","username","user","password","localStorage","clear","setItem","get","params","then","response","console","log","data","token","payload","catch","error","getItem","headers","Authorization","registerClient","alert","register","userName","confirmPassword","name","email","noTlp","alamat","bodyRequestClient","status","bodyRequestUser","no_hp","post","changeInputUser","el","doLogout"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nconst baseUrl = \"http://0.0.0.0:5050\"\n\nexport const doLogin = () => {\n    return async (dispatch, getState) => {\n        await dispatch({\n            type: \"LOADING\"\n        });\n        // console.log(\"cek storage\", localStorage)\n        const username = getState().user.username;\n        const password = getState().user.password;\n        localStorage.clear()\n        localStorage.setItem(\"username\", username)\n        // console.log(\"cek storage2\", localStorage)\n        await axios\n            .get(baseUrl + \"/auth\", {\n                params: {\n                    username: username,\n                    password: password\n                }\n            })\n            .then(async (response) => {\n                console.log(\"masuk api\", response.data.token)\n                await dispatch({ type: \"SUCCESS_LOGIN\", payload: response.data });\n                localStorage.setItem(\"token\", response.data.token)\n                // console.log(\"cek storage2\", localStorage)\n            })\n            .catch(function (error) {\n            });\n        const token = localStorage.getItem(\"token\")\n        const response = await axios\n            .get(baseUrl + \"/user\", {\n                headers: {\n                    Authorization: 'Bearer ' + token\n                }\n            })\n        dispatch({\n            type: \"GET_USER\",\n            payload: response.data\n        })\n    };\n};\n\nexport const registerClient = () => {\n    return async (dispatch, getState) => {\n        alert(\"sdh msuk tws regis1\")\n        const username = getState().register.userName;\n        const password = getState().register.password;\n        const confirmPassword = getState().register.confirmPassword;\n        const name = getState().register.name;\n        const email = getState().register.email;\n        const noTlp = getState().register.noTlp;\n        const alamat = getState().register.alamat;\n        const bodyRequestClient = {\n            username: username,\n            password: password,\n            status: \"user\"\n        }\n        const bodyRequestUser = {\n            name: name,\n            email: email,\n            no_hp: noTlp,\n            alamat: alamat\n        }\n        localStorage.clear()\n        localStorage.setItem(\"username\", username)\n        localStorage.setItem(\"password\", password)\n        await axios\n            .post(baseUrl, bodyRequestClient, {\n                headers: {\n                    \"Content-Type\": \"application/json; charset=utf-8\",\n                },\n            })\n        alert(\"Create account success\")\n\n    };\n};\n\n\n\nexport const changeInputUser = (el) => {\n    return {\n        type: \"CHANGE_INPUT_USER\",\n        payload: el,\n    };\n};\nexport const doLogout = () => {\n    localStorage.clear()\n    console.log(\"cek storage2\", localStorage)\n    return {\n        type: \"LOG_OUT\",\n    };\n};"]},"metadata":{},"sourceType":"module"}