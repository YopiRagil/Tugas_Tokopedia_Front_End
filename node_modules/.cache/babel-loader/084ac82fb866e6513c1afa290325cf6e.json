{"ast":null,"code":"var _jsxFileName = \"/home/alta18/Documents/REACT_LIVE_CODE-/src/pages/home.jsx\";\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Header from \"../component/header\";\nimport Content from \"../component/homeContent\";\nimport Content1 from \"../component/homeContent1\";\nimport { connect } from \"react-redux\";\nimport { getMovies } from \"../store/actions/moviesActions\";\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = async () => {\n      const paramCategory = await this.props.match.params.category;\n      this.props.getMovies(paramCategory); //category\n\n      this.props.getArticle(); //list kiri\n    };\n  }\n\n  render() {\n    const isLoading = this.props.isLoading;\n    console.log(\"isloading test\");\n    const listMovies = this.props.listMovies;\n    const topHeadlines = listMovies.filter(item => {\n      if (item.content !== null && item.image !== null) {\n        return item;\n      }\n\n      return false;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, Object.assign({\n      handleRouter: e => this.handleRequestCategoryMovies(e),\n      getMovies: () => this.props.getMovies()\n    }, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }\n    }))), isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }, \"Please wait . . . \") : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-7 my-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, topHeadlines.map((item, key) => /*#__PURE__*/React.createElement(Content1, {\n      key: key,\n      title: item.title,\n      img: item.urlToImage,\n      content: item.description,\n      url: item.url,\n      publish: item.publishedAt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 19\n      }\n    }))))), \") : (\", /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: \"/signin\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }), \")}\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    movies: state.film.movies\n  };\n};\n\nconst mapDispatchToProps = {\n  getMovies\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/home/alta18/Documents/REACT_LIVE_CODE-/src/pages/home.jsx"],"names":["React","Component","Redirect","Header","Content","Content1","connect","getMovies","Home","componentDidMount","paramCategory","props","match","params","category","getArticle","render","isLoading","console","log","listMovies","topHeadlines","filter","item","content","image","e","handleRequestCategoryMovies","textAlign","map","key","title","urlToImage","description","url","publishedAt","pathname","mapStateToProps","state","movies","film","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Header from \"../component/header\";\nimport Content from \"../component/homeContent\";\nimport Content1 from \"../component/homeContent1\";\nimport { connect } from \"react-redux\";\nimport { getMovies } from \"../store/actions/moviesActions\";\n\nclass Home extends Component {\n  componentDidMount = async () => {\n    const paramCategory = await this.props.match.params.category;\n    this.props.getMovies(paramCategory); //category\n    this.props.getArticle(); //list kiri\n  };\n  render() {\n    const isLoading = this.props.isLoading;\n    console.log(\"isloading test\");\n    const listMovies = this.props.listMovies;\n\n    const topHeadlines = listMovies.filter((item) => {\n      if (item.content !== null && item.image !== null) {\n        return item;\n      }\n      return false;\n    });\n\n    return (\n      <div>\n        <React.Fragment>\n          <div>\n            <div>\n              <Header\n                handleRouter={(e) => this.handleRequestCategoryMovies(e)}\n                getMovies={() => this.props.getMovies()}\n                {...this.props}\n              />\n            </div>\n            {isLoading ? (\n              <div style={{ textAlign: \"center\" }}>Please wait . . . </div>\n            ) : (\n              <div className=\"col-sm-7 my-5\">\n                {topHeadlines.map((item, key) => (\n                  <Content1\n                    key={key}\n                    title={item.title}\n                    img={item.urlToImage}\n                    content={item.description}\n                    url={item.url}\n                    publish={item.publishedAt}\n                  />\n                ))}\n              </div>\n            )}\n          </div>\n        </React.Fragment>\n        ) : (\n        <Redirect\n          to={{\n            pathname: \"/signin\",\n          }}\n        />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    movies: state.film.movies,\n  };\n};\nconst mapDispatchToProps = {\n  getMovies,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n"]},"metadata":{},"sourceType":"module"}